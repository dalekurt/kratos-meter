version: "3.8"

services:
  # server:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${SERVER_PORT}:8080"
  #   depends_on:
  #     - temporal
  #   environment:
  #     TEMPORAL_HOST: ${TEMPORAL_HOST}
  #     TEMPORAL_PORT: ${TEMPORAL_PORT}

  # worker:
  #   build:
  #     context: ./workers
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - temporal
  #   environment:
  #     TEMPORAL_HOST: ${TEMPORAL_HOST}
  #     TEMPORAL_PORT: ${TEMPORAL_PORT}

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${FRONTEND_PORT}:3000"

  # temporal
  temporal:
    depends_on:
      - temporal-postgresql
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=temporal-postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    ports:
      - 7233:7233
    labels:
      kompose.volume.type: configMap
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    stdin_open: true
    tty: true

  temporal-ui:
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    ports:
      - 8080:8080

  temporal-postgresql:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    volumes:
      - /var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana:/var/lib/grafana

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGODB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: ${MONGODB_PORT}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"

volumes:
  mongo_data:
    driver: local
